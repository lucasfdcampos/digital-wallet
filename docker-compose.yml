version: "3.8"

networks:
  wallet-net:
    external: true

services:
  account-db:
    image: postgres:13
    hostname: account-db
    container_name: account-db
    restart: always
    networks:
      - wallet-net
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=account
    tty: true
    volumes:
      - ./.docker/account-db:/var/lib/postgresql/data

  transaction-db:
    image: postgres:13
    hostname: transaction-db
    container_name: transaction-db
    restart: always
    networks:
      - wallet-net
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=transaction
    tty: true
    volumes:
      - ./.docker/transaction-db:/var/lib/postgresql/data

  account-ms:
    hostname: account-ms
    container_name: account-ms
    build:
      context: services/account
      dockerfile: Dockerfile
      target: development
    volumes:
      - $PWD/services/account:/usr/src/app
      - $PWD/services/account/usr/src/app/node_modules
      - $HOME/.cache/yarn:/yarncache
    command: yarn start:dev
    environment:
      - DATABASE_URL=postgresql://admin:admin@account-db/account
    networks:
      - wallet-net
    ports:
      - 3000:3000
    depends_on:
      - account-db
      - kafka
  
  transaction-ms:
    hostname: transaction-ms
    container_name: transaction-ms
    build:
      context: services/transaction
      dockerfile: Dockerfile
      target: development
    volumes:
      - $PWD/services/transaction:/usr/src/app
      - $PWD/services/transaction/usr/src/app/node_modules
      - $HOME/.cache/yarn:/yarncache
    command: yarn start:dev
    environment:
      - DATABASE_URL=postgresql://admin:admin@transaction-db/transaction
    networks:
      - wallet-net
    ports:
      - 3010:3010
    depends_on:
      - transaction-db
      - kafka

  # kong:
  #   container_name: kong
  #   build:
  #     context: services/kong
  #     dockerfile: Dockerfile
  #     target: development
  #   user: "kong"
  #   environment:
  #     KONG_DATABASE: 'off'
  #     KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yaml
  #     KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
  #   networks:
  #     - wallet-net
  #   ports:
  #     - "8000:8000/tcp"
  #     - "127.0.0.1:8001:8001/tcp"
  #     - "8443:8443/tcp"
  #     - "127.0.0.1:8444:8444/tcp"
  #   volumes:
  #     - $PWD/kong:/kong/declarative/
  #   healthcheck:
  #     test: ["CMD", "kong", "health"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  #   restart: on-failure
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  
  zook:
      image: confluentinc/cp-zookeeper:latest
      hostname: zook
      container_name: zook
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
      ports:
        - 2181:2181
    
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zook:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
    depends_on:
      - zook

  kafka-ui:
    container_name: kafka-ui
    hostname: kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zook:2181
      - KAFKA_CLUSTERS_0_NAME=local
    networks:
      - wallet-net
    ports:
      - 8080:8080
    depends_on:
      - zook
      - kafka