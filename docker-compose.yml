version: "3.8"

networks:
  picpay-net:
    external: true

services:
  account-db:
    image: postgres:13
    hostname: account-db
    container_name: account-db
    restart: always
    networks:
      - picpay-net
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=account
    tty: true
    volumes:
      - ./.docker/account-db:/var/lib/postgresql/data

  transaction-db:
    image: postgres:13
    hostname: transaction-db
    container_name: transaction-db
    restart: always
    networks:
      - picpay-net
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=transaction
    tty: true
    volumes:
      - ./.docker/transaction-db:/var/lib/postgresql/data

  account-ms:
    hostname: account-ms
    container_name: account-ms
    build:
      context: services/account
      dockerfile: Dockerfile
      target: development
    volumes:
      - $PWD/services/account:/usr/src/app
      - $PWD/services/account/usr/src/app/node_modules
      - $HOME/.cache/yarn:/yarncache
    command: yarn start:dev
    environment:
      - DATABASE_URL=postgresql://admin:admin@account-db/account
      - KAFKA_URL=kafka:9092
    networks:
      - picpay-net
    ports:
      - 3000:3000
    depends_on:
      - account-db
      - kafka
  
  transaction-ms:
    hostname: transaction-ms
    container_name: transaction-ms
    build:
      context: services/transaction
      dockerfile: Dockerfile
      target: development
    volumes:
      - $PWD/services/transaction:/usr/src/app
      - $PWD/services/transaction/usr/src/app/node_modules
      - $HOME/.cache/yarn:/yarncache
    command: yarn start:dev
    environment:
      - DATABASE_URL=postgresql://admin:admin@transaction-db/transaction
      - KAFKA_URL=kafka:9092
      - MONGO_URL=mongodb://admin:example@mongo-db/db_audit?authSource=db_audit
    networks:
      - picpay-net
    ports:
      - 3010:3010
    depends_on:
      - transaction-db
      - kafka
      - mongo-db

  donkey-kong:
    container_name: donkey-kong
    build:
      context: services/kong
      dockerfile: Dockerfile
      target: development
    user: "kong"
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yaml
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    networks:
      - picpay-net
    ports:
      - "8000:8000/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "8443:8443/tcp"
      - "127.0.0.1:8444:8444/tcp"
    volumes:
      - $PWD/services/kong:/kong/declarative/
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  mongo-db:
    image: mongo
    hostname: mongo-db
    container_name: mongo-db
    restart: always
    networks:
      - picpay-net
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=Pa55word
      - MONGO_INITDB_DATABASE=db_audit
      - MONGO_USERNAME=admin
      - MONGO_PASSWORD=example
    volumes:
      - ./.docker/mongo-data:/data/db
      - ./.docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  
  zook:
    image: confluentinc/cp-zookeeper:latest
    hostname: zook
    container_name: zook
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - picpay-net
    ports:
      - 2181:2181
    
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKAJS_NO_PARTITIONER_WARNING=1
      - KAFKA_ZOOKEEPER_CONNECT=zook:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
    networks:
      - picpay-net
    depends_on:
      - zook

  kafka-ui:
    container_name: kafka-ui
    hostname: kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zook:2181
      - KAFKA_CLUSTERS_0_NAME=local
    networks:
      - picpay-net
    ports:
      - 8080:8080
    depends_on:
      - zook
      - kafka